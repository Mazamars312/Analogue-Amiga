Archive member included to satisfy reference by file (symbol)

/opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)
                              uart.o (__divsi3)

Discarded input sections

 .group         0x0000000000000000        0xc spi.o
 .group         0x0000000000000000        0xc minimig_fdd.o

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x0000000000000000 0x0000000000008000 xrw
SRAM             0x0000000000008000 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD main.o
LOAD interrupts.o
LOAD timer.o
LOAD start.o
LOAD spi.o
LOAD printf.o
LOAD uart.o
LOAD apf.o
LOAD minimig.o
LOAD minimig_fdd.o
LOAD minimig_config.o
LOAD minimig_inputs.o
LOAD startup.o
                0x0000000000000400                _stack_size = DEFINED (_stack_size)?_stack_size:0x400
                0x0000000000000000                _heap_size = DEFINED (_heap_size)?_heap_size:0x0

._vector        0x0000000000000000      0x112
 *startup.o(.start_jump)
 .start_jump    0x0000000000000000        0xe startup.o
                0x0000000000000000                crtStart
 *startup.o(.text)
 *fill*         0x000000000000000e       0x12 
 .text          0x0000000000000020       0xf2 startup.o
                0x0000000000000020                trap_entry

.data           0x0000000000000114      0x4f4
 *(.rdata)
 *(.rodata .rodata.*)
 .rodata.str1.4
                0x0000000000000114       0x7a main.o
 *fill*         0x000000000000018e        0x2 
 .rodata.str1.4
                0x0000000000000190       0x97 apf.o
 *fill*         0x0000000000000227        0x1 
 .rodata.str1.4
                0x0000000000000228       0x21 minimig.o
 *fill*         0x0000000000000249        0x3 
 .rodata.str1.4
                0x000000000000024c      0x27b minimig_fdd.o
 *fill*         0x00000000000004c7        0x1 
 .rodata.str1.4
                0x00000000000004c8       0x34 minimig_config.o
                                         0x33 (size before relaxing)
 .rodata        0x00000000000004fc      0x100 minimig_inputs.o
 *(.gnu.linkonce.r.*)
 *(.data .data.*)
 .data          0x00000000000005fc        0x0 main.o
 .data          0x00000000000005fc        0x0 interrupts.o
 .data          0x00000000000005fc        0x0 timer.o
 .data          0x00000000000005fc        0x0 start.o
 .data          0x00000000000005fc        0x0 spi.o
 .data          0x00000000000005fc        0x0 printf.o
 .data          0x00000000000005fc        0x0 uart.o
 .data          0x00000000000005fc        0x0 apf.o
 .data          0x00000000000005fc        0x0 minimig.o
 .data          0x00000000000005fc        0x0 minimig_fdd.o
 .data          0x00000000000005fc        0x0 minimig_config.o
 .data          0x00000000000005fc        0x0 minimig_inputs.o
 .data          0x00000000000005fc        0x0 startup.o
 .data          0x00000000000005fc        0x0 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)
 *(.gnu.linkonce.d.*)
                0x0000000000000600                . = ALIGN (0x8)
 *fill*         0x00000000000005fc        0x4 
                0x0000000000000e00                PROVIDE (__global_pointer$ = (. + 0x800))
 *(.sdata .sdata.*)
 .sdata         0x0000000000000600        0x8 start.o
 *(.gnu.linkonce.s.*)
                0x0000000000000608                . = ALIGN (0x8)
 *(.srodata.cst16)
 *(.srodata.cst8)
 *(.srodata.cst4)
 *(.srodata.cst2)
 *(.srodata .srodata.*)

.bss            0x0000000000000608      0x26c
                0x0000000000000608                . = ALIGN (0x4)
                0x0000000000000608                _bss_start = .
 *(.sbss*)
 .sbss          0x0000000000000608        0x1 start.o
 .sbss          0x0000000000000609        0x2 minimig_fdd.o
                0x0000000000000609                Error
                0x000000000000060a                drives
 *fill*         0x000000000000060b        0x1 
 .sbss          0x000000000000060c       0x18 minimig_inputs.o
                0x000000000000060c                MOD_CAPS_LOCK
                0x000000000000060d                MOD_CTRL
                0x000000000000060e                MOD_LWIN
                0x000000000000060f                MOD_RSHIFT
                0x0000000000000610                MOD_LSHIFT
                0x0000000000000611                MOD_RALT
                0x0000000000000612                MOD_LALT
                0x0000000000000614                keyboard_buffer
                0x000000000000061a                y_count
                0x000000000000061c                x_count
                0x0000000000000620                mouse_counter
 *(.gnu.linkonce.sb.*)
 *(.bss .bss.*)
 .bss           0x0000000000000624        0x0 main.o
 .bss           0x0000000000000624        0x0 interrupts.o
 .bss           0x0000000000000624        0x0 timer.o
 .bss           0x0000000000000624        0x0 start.o
 .bss           0x0000000000000624        0x0 spi.o
 .bss           0x0000000000000624        0x0 printf.o
 .bss           0x0000000000000624        0x0 uart.o
 .bss           0x0000000000000624        0x0 apf.o
 .bss           0x0000000000000624        0x0 minimig.o
 .bss           0x0000000000000624      0x250 minimig_fdd.o
                0x0000000000000624                sector_buffer0
                0x0000000000000824                df
 .bss           0x0000000000000874        0x0 minimig_config.o
 .bss           0x0000000000000874        0x0 minimig_inputs.o
 .bss           0x0000000000000874        0x0 startup.o
 .bss           0x0000000000000874        0x0 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)
 *(.gnu.linkonce.b.*)
 *(COMMON)
                0x0000000000000874                . = ALIGN (0x4)
                0x0000000000000874                _bss_end = .

.rodata
 *(.rdata)
 *(.rodata .rodata.*)
 *(.gnu.linkonce.r.*)

.noinit         0x0000000000000874        0x0
                0x0000000000000874                . = ALIGN (0x4)
 *(.noinit .noinit.*)
                0x0000000000000874                . = ALIGN (0x4)

.memory         0x0000000000000874     0x21d8
 *(.text)
 .text          0x0000000000000874       0xee main.o
                0x0000000000000874                init()
                0x00000000000008ac                mainloop()
                0x0000000000000960                irqCallback()
 .text          0x0000000000000962       0x12 interrupts.o
                0x0000000000000962                _handle_trap
                0x0000000000000966                EnableInterrupts()
                0x000000000000096e                DisableInterrupts()
 .text          0x0000000000000974       0x76 timer.o
                0x0000000000000974                GetTimer()
                0x000000000000097a                CheckTimer(unsigned int)
                0x0000000000000990                Set_interrupt_Timer(unsigned int)
                0x0000000000000996                ResetTimer()
                0x00000000000009a4                SetTimer(unsigned int)
                0x00000000000009b6                usleep(unsigned int)
                0x00000000000009c0                GetTimer2()
                0x00000000000009c6                CheckTimer2(unsigned int)
                0x00000000000009dc                ResetTimer2()
 .text          0x00000000000009ea       0x14 start.o
                0x00000000000009ea                _start
 .text          0x00000000000009fe      0x222 spi.o
                0x00000000000009fe                HPS_fpga_gpo_write(unsigned long)
                0x0000000000000a04                HPS_fpga_gpo_read()
                0x0000000000000a0a                HPS_fpga_gpi_read()
                0x0000000000000a10                HPS_fpga_spi_en(unsigned long, unsigned long)
                0x0000000000000a2c                HPS_EnableFpga()
                0x0000000000000a3e                HPS_DisableFpga()
                0x0000000000000a50                HPS_EnableIO()
                0x0000000000000a62                HPS_DisableIO()
                0x0000000000000a74                HPS_fpga_spi(unsigned short)
                0x0000000000000ab0                HPS_spi_read(unsigned char*, unsigned long, int)
                0x0000000000000b00                HPS_spi_write(unsigned char const*, unsigned long, int)
                0x0000000000000b54                HPS_spi_block_read(unsigned char*, int, int)
                0x0000000000000b56                HPS_spi_block_write(unsigned char const*, int, int)
                0x0000000000000b58                HPS_spi_uio_cmd_cont(unsigned short)
                0x0000000000000b68                HPS_spi_uio_cmd(unsigned short)
                0x0000000000000b7a                HPS_spi_uio_cmd8_cont(unsigned char, unsigned char)
                0x0000000000000b9a                HPS_spi_uio_cmd8(unsigned char, unsigned char)
                0x0000000000000bac                HPS_spi_uio_cmd16(unsigned char, unsigned short)
                0x0000000000000bc6                HPS_spi_uio_cmd32(unsigned char, unsigned long, int)
 .text          0x0000000000000c20      0x6d4 printf.o
                0x0000000000000e54                printf_
 .text          0x00000000000012f4       0x56 uart.o
                0x00000000000012f4                putchar
                0x0000000000001304                puts
                0x000000000000132c                SetUART
 .text          0x000000000000134a      0x318 apf.o
                0x000000000000134a                dataslot_ready()
                0x0000000000001354                dataslot_status()
                0x000000000000135c                dataslot_search_id(unsigned short)
                0x000000000000137e                dataslot_size(unsigned short)
                0x00000000000013a6                dataslot_updated()
                0x00000000000013b0                dataslot_read(unsigned short, unsigned long, unsigned long, unsigned long)
                0x0000000000001420                dataslot_write(unsigned short, unsigned long, unsigned long, unsigned long)
                0x0000000000001462                dataslot_read_lba_set_fast(unsigned short, unsigned long, unsigned long, unsigned long)
                0x000000000000152a                dataslot_read_lba_fast(unsigned long, unsigned long)
                0x0000000000001564                dataslot_read_lba_set(unsigned short, unsigned long, unsigned long)
                0x000000000000157c                dataslot_read_lba(unsigned long)
                0x00000000000015d2                dataslot_write_lba_set(unsigned short, unsigned long, unsigned long)
                0x0000000000001620                dataslot_write_lba(unsigned long)
 .text          0x0000000000001662      0x130 minimig.o
                0x0000000000001662                minigmig_reset(int)
                0x000000000000168a                minimig_fdd_update()
                0x00000000000016fe                minimig_update_dataslots()
                0x000000000000175a                minimig_poll_io()
 .text          0x0000000000001792      0xc6c minimig_fdd.o
                0x0000000000001792                GetData()
                0x00000000000019a6                FindSync(adfTYPE*)
                0x0000000000001a40                GetHeader(unsigned char*, unsigned char*)
                0x0000000000001cc2                SendSector(unsigned char*, unsigned char, unsigned char, unsigned char, unsigned char)
                0x0000000000001ec6                SendGap()
                0x0000000000001ef2                WriteTrack(adfTYPE*)
                0x0000000000001fb4                ReadTrack(adfTYPE*)
                0x00000000000021f2                UpdateDriveStatus
                0x000000000000229a                UnsertFloppy
                0x00000000000022ce                RemoveDriveStatus
                0x00000000000022e4                HandleFDD
                0x0000000000002358                InsertFloppy
 .text          0x00000000000023fe      0x180 minimig_config.o
                0x00000000000023fe                minimig_bios()
                0x00000000000024c8                minimig_restart_first
                0x0000000000002526                minimig_restart_running_core
 .text          0x000000000000257e      0x418 minimig_inputs.o
                0x000000000000257e                update_mouse_inputs()
                0x00000000000026ee                update_keyboard_inputs()
                0x000000000000294c                minimig_input_setup()
                0x0000000000002952                minimig_input_update()
                0x0000000000002988                minimig_joystick_reg_update()
 *fill*         0x0000000000002996        0x2 
 .text          0x0000000000002998       0xb4 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)
                0x0000000000002998                __divsi3
                0x00000000000029a0                __udivsi3
                0x00000000000029e8                __umodsi3
                0x0000000000002a1c                __modsi3
                0x0000000000002a4c                end = .

.text.startup   0x0000000000002a4c       0x18
 .text.startup  0x0000000000002a4c       0x18 main.o
                0x0000000000002a4c                main

.text._Z5spi_bh
                0x0000000000002a64       0x12
 .text._Z5spi_bh
                0x0000000000002a64       0x12 spi.o
                0x0000000000002a64                spi_b(unsigned char)

.text._Z5spi_wt
                0x0000000000002a76        0x4
 .text._Z5spi_wt
                0x0000000000002a76        0x4 minimig_fdd.o
                0x0000000000002a76                spi_w(unsigned short)

.rela.dyn       0x0000000000002a7c        0x0
 .rela.text     0x0000000000002a7c        0x0 main.o

.ctors          0x0000000000002a7a        0x2
                0x0000000000002a7c                . = ALIGN (0x4)
 *fill*         0x0000000000002a7a        0x2 
                0x0000000000002a7c                _ctors_start = .
 *(.init_array*)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
                0x0000000000002a7c                . = ALIGN (0x4)
                0x0000000000002a7c                _ctors_end = .
                [!provide]                        PROVIDE (END_OF_SW_IMAGE = .)

._user_heap     0x0000000000002a7c        0x4
                0x0000000000002a80                . = ALIGN (0x8)
 *fill*         0x0000000000002a7c        0x4 
                [!provide]                        PROVIDE (end = .)
                [!provide]                        PROVIDE (_end = .)
                [!provide]                        PROVIDE (_heap_start = .)
                0x0000000000002a80                . = (. + _heap_size)
                0x0000000000002a80                . = ALIGN (0x8)
                [!provide]                        PROVIDE (_heap_end = .)

._stack         0x0000000000002a80      0x400
                0x0000000000002a80                . = ALIGN (0x10)
 *fill*         0x0000000000002a80        0x0 
                [!provide]                        PROVIDE (_stack_end = .)
                0x0000000000002e80                . = (. + _stack_size)
 *fill*         0x0000000000002a80      0x400 
                0x0000000000002e80                . = ALIGN (0x10)
                0x0000000000002e80                PROVIDE (_stack_start = .)

.SRAM           0x0000000000008000     0x1600
                0x0000000000008000                __ram_start = .
 *(SRAM*)
 SRAM           0x0000000000008000     0x1600 minimig_fdd.o
                0x0000000000008000                sector_buffer1
                0x0000000000009600                __ram_end = .
LOAD /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a
OUTPUT(mpu.elf elf32-littleriscv)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 interrupts.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 start.o
 .comment       0x0000000000000011       0x12 spi.o
 .comment       0x0000000000000011       0x12 printf.o
 .comment       0x0000000000000011       0x12 uart.o
 .comment       0x0000000000000011       0x12 apf.o
 .comment       0x0000000000000011       0x12 minimig.o
 .comment       0x0000000000000011       0x12 minimig_fdd.o
 .comment       0x0000000000000011       0x12 minimig_config.o
 .comment       0x0000000000000011       0x12 minimig_inputs.o

.debug_line     0x0000000000000000      0x169
 .debug_line    0x0000000000000000      0x169 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)

.debug_info     0x0000000000000000       0x26
 .debug_info    0x0000000000000000       0x26 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)

.debug_abbrev   0x0000000000000000       0x14
 .debug_abbrev  0x0000000000000000       0x14 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)

.debug_aranges  0x0000000000000000       0x20
 .debug_aranges
                0x0000000000000000       0x20 /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)

.debug_str      0x0000000000000000       0xaa
 .debug_str     0x0000000000000000       0xaa /opt/riscv32i/lib/gcc/riscv32-unknown-elf/8.2.0//libgcc.a(div.o)
